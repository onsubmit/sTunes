//-----------------------------------------------------------------------
// <copyright file="ChooseDeviceForm.cs" company="Andy Young">
//     Copyright (c) Andy Young. All rights reserved.
// </copyright>
//-----------------------------------------------------------------------

namespace OnSubmit.STunes
{
    using System;
    using System.Diagnostics.CodeAnalysis;
    using System.Threading.Tasks;
    using System.Windows.Forms;
    using OnSubmit.STunes.Apis;
    using OnSubmit.STunes.Entities;

    /// <summary>
    /// Form to allow the user to select an playback device
    /// </summary>
    [SuppressMessage("Microsoft.Design", "IDE1006", Justification = "WinForms autogenerated methods")]
    [SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:ElementsMustBeDocumented", Justification = "WinForms autogenerated methods")]
    public partial class ChooseDeviceForm : Form
    {
        /// <summary>
        /// The Player API
        /// </summary>
        private readonly PlayerApi playerApi;

        /// <summary>
        /// Initializes a new instance of the <see cref="ChooseDeviceForm"/> class
        /// </summary>
        /// <param name="playerApi">The Player API</param>
        public ChooseDeviceForm(PlayerApi playerApi)
        {
            this.InitializeComponent();

            this.playerApi = playerApi;
        }

        /// <summary>
        /// Gets the selected device
        /// </summary>
        public Device SelectedDevice => this.comboBoxDevices.SelectedItem as Device;

        private async void ChooseDeviceForm_Load(object sender, EventArgs e)
        {
            await this.GetDevices();
        }

        private async void buttonRefresh_Click(object sender, EventArgs e)
        {
            await this.GetDevices();
        }

        /// <summary>
        /// Gets the user's devices
        /// </summary>
        /// <returns>The async task</returns>
        private async Task GetDevices()
        {
            this.comboBoxDevices.Enabled = false;
            this.buttonOk.Enabled = false;
            this.buttonRefresh.Enabled = false;

            dynamic json = await this.playerApi.GetDevices();
            this.comboBoxDevices.Items.Clear();
            foreach (dynamic device in json.devices)
            {
                this.comboBoxDevices.Items.Add(new Device((string)device.id, (string)device.name));
            }

            this.comboBoxDevices.Enabled = true;
            this.buttonOk.Enabled = true;
            this.buttonRefresh.Enabled = true;
            this.comboBoxDevices.SelectedIndex = 0;
        }
    }
}
